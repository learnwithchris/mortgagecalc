{"version":3,"sources":["LoanForm.js","App.js","index.js"],"names":["LoanForm","state","amount","rate","years","payment","touched","handleUserChange","e","setState","target","name","value","handleBlur","field","handleSubmit","preventDefault","calculatePayment","mir","numPaymemts","Math","pow","toFixed","this","errors","length","isNaN","validate","isDisabled","Object","keys","some","x","shouldMarkError","hasError","shouldShow","className","onSubmit","type","onChange","onBlur","placeholder","disabled","readOnly","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iOAYqBA,E,4MACjBC,MAAQ,CACJC,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,QAAS,EACTC,QAAS,CACLJ,QAAQ,EACRC,MAAM,EACNC,OAAO,I,EAGfG,iBAAmB,SAACC,GAChB,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOE,S,EAGnCC,WAAa,SAAAC,GAAK,OAAI,SAAAN,GAClB,EAAKC,SAAS,CACZH,QAAQ,eAAM,EAAKL,MAAMK,QAAlB,eAA4BQ,GAAQ,Q,EAGjDC,aAAe,SAACP,GACZA,EAAEQ,iBACF,EAAKC,oB,EAETA,iBAAmB,WAAO,IAAD,EACW,EAAKhB,MAA7BC,EADa,EACbA,OACFgB,EAFe,EACLf,KACE,KACZgB,EAAsB,GAHP,EACCf,MAIhBC,GAAWH,EAASgB,GAAQ,EAAIE,KAAKC,IAAI,EAAIH,GAAOC,KAAeG,QAAQ,GACjF,EAAKb,SAAS,CACVJ,a,uDASE,IAAD,SAC2BkB,KAAKtB,MAC/BuB,EArDd,SAAkBtB,EAAQC,EAAMC,GAE9B,MAAO,CACLF,OAA0B,IAAlBA,EAAOuB,QAAgBC,MAAMxB,GACrCC,KAAsB,IAAhBA,EAAKsB,QAAgBC,MAAMvB,GACjCC,MAAwB,IAAjBA,EAAMqB,QAAiBC,MAAMtB,IAgDjBuB,CAFV,EACGzB,OADH,EACWC,KADX,EACiBC,OAEhBwB,EAAaC,OAAOC,KAAKN,GAAQO,MAAK,SAAAC,GAAC,OAAIR,EAAOQ,MAElDC,EAAkB,SAAAnB,GACtB,IAAMoB,EAAWV,EAAOV,GAClBqB,EAAa,EAAKlC,MAAMK,QAAQQ,GACtC,QAAOoB,GAAWC,GAEpB,OACI,yBAAKC,UAAU,gCACX,0BAAMC,SAAUd,KAAKR,cACjB,yBAAKqB,UAAU,kBACX,8CACA,2BAAOE,KAAK,OACLF,UAAS,uBAAkBH,EAAgB,UAAY,QAAU,IACjEtB,KAAK,SACLC,MAAOW,KAAKtB,MAAMC,OAClBqC,SAAUhB,KAAKhB,iBACfiC,OAAQjB,KAAKV,WAAW,UACxB4B,YAAY,uBAEvB,yBAAKL,UAAU,kBACX,8CACA,2BAAOE,KAAK,OACLF,UAAS,uBAAkBH,EAAgB,QAAU,QAAU,IAC/DtB,KAAK,OACLC,MAAOW,KAAKtB,MAAME,KAClBoC,SAAUhB,KAAKhB,iBACfiC,OAAQjB,KAAKV,WAAW,QACxB4B,YAAY,gCAEvB,yBAAKL,UAAU,kBACX,8CACA,2BAAOE,KAAK,OACLF,UAAS,uBAAkBH,EAAgB,SAAW,QAAU,IAChEtB,KAAK,QACLC,MAAOW,KAAKtB,MAAMG,MAClBmC,SAAUhB,KAAKhB,iBACfiC,OAAQjB,KAAKV,WAAW,SACxB4B,YAAY,kCAEvB,yBAAKL,UAAU,kBACX,4BAAQE,KAAK,SACLF,UAAU,4BACVM,SAAUd,GAFlB,cAOJ,yBAAKQ,UAAU,kBACX,0CACA,2BAAOE,KAAK,OACLF,UAAU,eACVzB,KAAK,UACLC,MAAOW,KAAKtB,MAAMI,QAClBsC,UAAU,W,GAnGHC,aCDvBC,MARf,WACE,OACE,yBAAKT,UAAU,sBACb,kBAAC,EAAD,Q,MCCNU,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.397ab4d3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./App.css\";\r\n\r\nfunction validate(amount, rate, years) {\r\n  // true means invalid, so our conditions got reversed\r\n  return {\r\n    amount: amount.length === 0 || isNaN(amount),\r\n    rate: rate.length === 0 || isNaN(rate),\r\n    years: years.length === 0  || isNaN(years)\r\n  };\r\n}\r\n\r\nexport default class LoanForm extends Component {\r\n    state = {\r\n        amount: '',\r\n        rate: '',\r\n        years: '',\r\n        payment: 0,\r\n        touched: {\r\n            amount: false,\r\n            rate: false,\r\n            years: false\r\n        }\r\n    }\r\n    handleUserChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handleBlur = field => e => {\r\n        this.setState({\r\n          touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.calculatePayment();        \r\n    }\r\n    calculatePayment = () => {\r\n        const { amount, rate, years } = this.state;\r\n        const mir = rate/ 1200;\r\n        const numPaymemts = years * 12;\r\n\r\n        const payment =((amount * mir) / (1 - Math.pow(1 + mir, - numPaymemts))).toFixed(2);\r\n        this.setState({\r\n            payment\r\n        })\r\n    }\r\n    // canBeSubmitted = () => {\r\n    //     const { amount, rate, years} = this.state;\r\n    //     const errors = validate(amount, rate, years);\r\n    //     const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    //     return !isDisabled;\r\n    // }\r\n    render() {\r\n        const { amount, rate, years } = this.state;\r\n        const errors = validate(amount, rate, years);\r\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    \r\n        const shouldMarkError = field => {            \r\n          const hasError = errors[field];\r\n          const shouldShow = this.state.touched[field];\r\n          return hasError ? shouldShow : false;\r\n        };\r\n        return (\r\n            <div className=\"container jumbotron col-md-6\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group row\">\r\n                        <label>Loan Amount</label>\r\n                        <input type=\"text\"\r\n                               className={`form-control ${shouldMarkError('amount') ? 'error' : ''}`}\r\n                               name=\"amount\"\r\n                               value={this.state.amount}\r\n                               onChange={this.handleUserChange}\r\n                               onBlur={this.handleBlur(\"amount\")}\r\n                               placeholder=\"Enter loan amount\" />\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label>Annual Rate</label>\r\n                        <input type=\"text\"\r\n                               className={`form-control ${shouldMarkError('rate') ? 'error' : ''}`}\r\n                               name=\"rate\"\r\n                               value={this.state.rate}\r\n                               onChange={this.handleUserChange}\r\n                               onBlur={this.handleBlur(\"rate\")}\r\n                               placeholder=\"Enter annual rate (as a %)\" />\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label>Loan Length</label>\r\n                        <input type=\"text\"\r\n                               className={`form-control ${shouldMarkError('years') ? 'error' : ''}`}\r\n                               name=\"years\"\r\n                               value={this.state.years}\r\n                               onChange={this.handleUserChange}\r\n                               onBlur={this.handleBlur(\"years\")}\r\n                               placeholder=\"Enter loan length (in years)\" />\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <button type=\"submit\"\r\n                                className=\"btn btn-primary btn-block\"\r\n                                disabled={isDisabled}\r\n                        >\r\n                            calculate\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label>Payment</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               name=\"payment\"\r\n                               value={this.state.payment}\r\n                               readOnly={true} />\r\n                    </div>\r\n                </form>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport LoanForm from './LoanForm';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container col-md-9\">\r\n      <LoanForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}